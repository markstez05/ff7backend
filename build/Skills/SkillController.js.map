{"version":3,"sources":["../../src/Skills/SkillController.js"],"names":["Skill","require","SkillController","getSkill","req","res","find","userId","user","then","docs","status","json","catch","err","createSkill","body","skillBody","title","desc","level","type","newSkill","save","doc","send","updateSkill","id","params","findOneAndUpdate","_id","$set","deleteSkill","findByIdAndRemove","getSkillById","findById","module","exports"],"mappings":"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","file":"SkillController.js","sourcesContent":["const Skill = require('./SkillModel');\n\nconst SkillController = {\n\n    getSkill:(req, res) => {\n        Skill.find({userId: req.user})\n        .then(docs => res.status(200).json(docs))\n        .catch(err => res.status(500).json({err: 'could not get Skills...lel'}))\n    },\n    createSkill: (req, res) => {\n        if('title' in req.body && 'desc' in req.body && 'level' in req.body && 'type' in req.body ) {\n            const skillBody = { title: req.body.title, desc: req.body.desc, level: req.body.level, type: req.body.type, userId: req.user}\n            const newSkill = new Skill(skillBody);\n            newSkill.save()\n                .then(doc => res.status(201).json(doc))\n                .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            res.send('title, desc, level, type and equipped are required')\n        }\n    },\n    updateSkill: (req, res) => {\n        const { id } = req.params;\n        if('title' in req.body && 'desc' in req.body && 'level' in req.body && 'type' in req.body) {\n            const { title, desc, level, type } = req.body;\n            Skill.findOneAndUpdate({_id: id}, {$set:{title, desc, level, type}})\n            .then(doc => res.status(200).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            res.send('title, desc, level and type are required');\n        }\n    },\n    deleteSkill: (req, res) => {\n        const { id } = req.params;\n        Skill.findByIdAndRemove(id)\n        .then(doc => res.status(200).json(doc))\n        .catch(err => res.status(500).json({err: 'failed to delete work'}))\n    },\n    getSkillById: (req, res) => {\n        const { id } = req.params;\n        Skill.findById(id)\n        .then(doc => res.status(201).json(doc))\n        .catch(err => res.status(500).json({ err: \"cant yo\"}));\n    }\n}\n\nmodule.exports = SkillController;"]}