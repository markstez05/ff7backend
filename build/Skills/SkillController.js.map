{"version":3,"sources":["../../src/Skills/SkillController.js"],"names":["SkillController","getSkill","req","res","Skill","find","userId","user","then","status","json","docs","catch","err","createSkill","body","skillBody","title","desc","level","type","newSkill","save","doc","send","updateSkill","id","params","findOneAndUpdate","_id","$set","deleteSkill","findByIdAndRemove","getSkillById","findById"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,kBAAkB;;AAEpBC,cAAS,kBAACC,GAAD,EAAMC,GAAN,EAAc;AACnBC,6BAAMC,IAAN,CAAW,EAACC,QAAQJ,IAAIK,IAAb,EAAX,EACCC,IADD,CACM;AAAA,mBAAQL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,IAArB,CAAR;AAAA,SADN,EAECC,KAFD,CAEO;AAAA,mBAAOT,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACG,KAAK,4BAAN,EAArB,CAAP;AAAA,SAFP;AAGH,KANmB;AAOpBC,iBAAa,qBAACZ,GAAD,EAAMC,GAAN,EAAc;AACvB,YAAG,WAAWD,IAAIa,IAAf,IAAuB,UAAUb,IAAIa,IAArC,IAA6C,WAAWb,IAAIa,IAA5D,IAAoE,UAAUb,IAAIa,IAArF,EAA4F;AACxF,gBAAMC,YAAY,EAAEC,OAAOf,IAAIa,IAAJ,CAASE,KAAlB,EAAyBC,MAAMhB,IAAIa,IAAJ,CAASG,IAAxC,EAA8CC,OAAOjB,IAAIa,IAAJ,CAASI,KAA9D,EAAqEC,MAAMlB,IAAIa,IAAJ,CAASK,IAApF,EAA0Fd,QAAQJ,IAAIK,IAAtG,EAAlB;AACA,gBAAMc,WAAW,IAAIjB,oBAAJ,CAAUY,SAAV,CAAjB;AACAK,qBAASC,IAAT,GACKd,IADL,CACU;AAAA,uBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,GAArB,CAAP;AAAA,aADV,EAEKX,KAFL,CAEW;AAAA,uBAAOT,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,KAAK,sBAAP,EAArB,CAAP;AAAA,aAFX;AAGH,SAND,MAMO;AACHV,gBAAIqB,IAAJ,CAAS,oDAAT;AACH;AACJ,KAjBmB;AAkBpBC,iBAAa,qBAACvB,GAAD,EAAMC,GAAN,EAAc;AAAA,YACfuB,EADe,GACRxB,IAAIyB,MADI,CACfD,EADe;;AAEvB,YAAG,WAAWxB,IAAIa,IAAf,IAAuB,UAAUb,IAAIa,IAArC,IAA6C,WAAWb,IAAIa,IAA5D,IAAoE,UAAUb,IAAIa,IAArF,EAA2F;AAAA,4BAClDb,IAAIa,IAD8C;AAAA,gBAC/EE,KAD+E,aAC/EA,KAD+E;AAAA,gBACxEC,IADwE,aACxEA,IADwE;AAAA,gBAClEC,KADkE,aAClEA,KADkE;AAAA,gBAC3DC,IAD2D,aAC3DA,IAD2D;;AAEvFhB,iCAAMwB,gBAAN,CAAuB,EAACC,KAAKH,EAAN,EAAvB,EAAkC,EAACI,MAAK,EAACb,YAAD,EAAQC,UAAR,EAAcC,YAAd,EAAqBC,UAArB,EAAN,EAAlC,EACCZ,IADD,CACM;AAAA,uBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,GAArB,CAAP;AAAA,aADN,EAECX,KAFD,CAEO;AAAA,uBAAOT,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,KAAK,sBAAP,EAArB,CAAP;AAAA,aAFP;AAGH,SALD,MAKO;AACHV,gBAAIqB,IAAJ,CAAS,0CAAT;AACH;AACJ,KA5BmB;AA6BpBO,iBAAa,qBAAC7B,GAAD,EAAMC,GAAN,EAAc;AAAA,YACfuB,EADe,GACRxB,IAAIyB,MADI,CACfD,EADe;;AAEvBtB,6BAAM4B,iBAAN,CAAwBN,EAAxB,EACClB,IADD,CACM;AAAA,mBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,GAArB,CAAP;AAAA,SADN,EAECX,KAFD,CAEO;AAAA,mBAAOT,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACG,KAAK,uBAAN,EAArB,CAAP;AAAA,SAFP;AAGH,KAlCmB;AAmCpBoB,kBAAc,sBAAC/B,GAAD,EAAMC,GAAN,EAAc;AAAA,YAChBuB,EADgB,GACTxB,IAAIyB,MADK,CAChBD,EADgB;;AAExBtB,6BAAM8B,QAAN,CAAeR,EAAf,EACClB,IADD,CACM;AAAA,mBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBa,GAArB,CAAP;AAAA,SADN,EAECX,KAFD,CAEO;AAAA,mBAAOT,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,KAAK,SAAP,EAArB,CAAP;AAAA,SAFP;AAGH;AAxCmB,CAAxB;;kBA2Ceb,e","file":"SkillController.js","sourcesContent":["import Skill from './SkillModel';\n\nconst SkillController = {\n\n    getSkill:(req, res) => {\n        Skill.find({userId: req.user})\n        .then(docs => res.status(200).json(docs))\n        .catch(err => res.status(500).json({err: 'could not get Skills...lel'}))\n    },\n    createSkill: (req, res) => {\n        if('title' in req.body && 'desc' in req.body && 'level' in req.body && 'type' in req.body ) {\n            const skillBody = { title: req.body.title, desc: req.body.desc, level: req.body.level, type: req.body.type, userId: req.user}\n            const newSkill = new Skill(skillBody);\n            newSkill.save()\n                .then(doc => res.status(201).json(doc))\n                .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            res.send('title, desc, level, type and equipped are required')\n        }\n    },\n    updateSkill: (req, res) => {\n        const { id } = req.params;\n        if('title' in req.body && 'desc' in req.body && 'level' in req.body && 'type' in req.body) {\n            const { title, desc, level, type } = req.body;\n            Skill.findOneAndUpdate({_id: id}, {$set:{title, desc, level, type}})\n            .then(doc => res.status(200).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            res.send('title, desc, level and type are required');\n        }\n    },\n    deleteSkill: (req, res) => {\n        const { id } = req.params;\n        Skill.findByIdAndRemove(id)\n        .then(doc => res.status(200).json(doc))\n        .catch(err => res.status(500).json({err: 'failed to delete work'}))\n    },\n    getSkillById: (req, res) => {\n        const { id } = req.params;\n        Skill.findById(id)\n        .then(doc => res.status(201).json(doc))\n        .catch(err => res.status(500).json({ err: \"cant yo\"}));\n    }\n}\n\nexport default SkillController;"]}