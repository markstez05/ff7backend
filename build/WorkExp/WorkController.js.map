{"version":3,"sources":["../../src/WorkExp/WorkController.js"],"names":["Work","require","User","WorkController","getWork","req","res","find","userId","user","then","docs","status","json","catch","err","createWork","body","workBody","title","location","date","text","newWork","save","doc","send","updateWork","id","params","completed","findOneAndUpdate","_id","$set","deleteWork","findByIdAndRemove","getWorkById","findById","module","exports"],"mappings":"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","file":"WorkController.js","sourcesContent":["const Work = require('./WorkModel');\nconst User = require('../Users/UserModel');\n\n\nconst WorkController = {\n\n    getWork:(req, res) => {\n        Work.find({userId: req.user})\n        .then(docs => res.status(200).json(docs))\n        .catch(err => res.status(500).json({err: 'could not get work...lel'}))\n    },\n    createWork: (req, res) => {\n        if('title' in req.body && 'location' in req.body && 'date' in req.body && 'text' in req.body) {\n            const workBody = { title: req.body.title, location: req.body.location, date: req.body.date, text: req.body.text, userId: req.user}\n            const newWork = new Work(workBody);\n            newWork.save()\n                .then(doc => res.status(201).json(doc))\n                .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            res.send('title, location, date, text and user are required')\n        }\n    },\n    updateWork: (req, res) => {\n        const { id } = req.params;\n        if('title' in req.body && 'location' in req.body && 'date' in req.body && 'text' in req.body) {\n            const { title, location, date, text, completed } = req.body;\n            Work.findOneAndUpdate({_id: id}, {$set:{title, location, date, text, completed}})\n            .then(doc => res.status(204).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            res.send('title, location, date and text are required');\n        }\n    },\n    deleteWork: (req, res) => {\n        const { id } = req.params;\n        Work.findByIdAndRemove(id)\n        .then(doc => res.status(200).json(doc))\n        .catch(err => res.status(500).json({err: 'failed to delete work'}))\n    },\n    getWorkById: (req, res) => {\n        const { id } = req.params;\n        Work.findById(id)\n        .then(doc => res.status(204).json(doc))\n        .catch(err => res.status(500).json({ err: \"cant yo\"}));\n    }\n}\n\nmodule.exports = WorkController;"]}