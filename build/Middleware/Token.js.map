{"version":3,"sources":["../../src/Middleware/Token.js"],"names":["jwt","require","secret","GenerateToken","user","timestamp","Date","getTime","payload","sub","_id","iat","username","options","expiresIn","sign","module","exports"],"mappings":"AAAA,MAAMA,MAAMC,QAAQ,cAAR,CAAZ;;AAEA,MAAMC,SAAS,uBAAf;AACA,MAAMC,gBAAgBC,QAAQ;AAC1B,UAAMC,YAAY,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,UAAMC,UAAU;AACZC,aAAKL,KAAKM,GADE;AAEZC,aAAKN,SAFO;AAGZO,kBAAUR,KAAKQ;AAHH,KAAhB;AAKA,UAAMC,UAAU;AACZC,mBAAW;AADC,KAAhB;;AAIA,WAAOd,IAAIe,IAAJ,CAASP,OAAT,EAAkBN,MAAlB,EAA0BW,OAA1B,CAAP;AACH,CAZD;;AAcAG,OAAOC,OAAP,GAAiBd,aAAjB","file":"Token.js","sourcesContent":["const jwt = require('jsonwebtoken');\n\nconst secret = 'nobody tosses a dwarf';\nconst GenerateToken = user => {\n    const timestamp = new Date().getTime();\n    const payload = {\n        sub: user._id,\n        iat: timestamp,\n        username: user.username,\n    };\n    const options = {\n        expiresIn: '24h',\n    };\n\n    return jwt.sign(payload, secret, options);\n}\n\nmodule.exports = GenerateToken;"]}