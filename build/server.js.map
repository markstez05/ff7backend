{"version":3,"sources":["../src/server.js"],"names":["require","CONNECTION_URI","process","env","MONGODB_URI","Config","SERVER_CREDENTIALS","app","port","PORT","use","express","json","MediaRouter","UserRouter","WorkRouter","SkillRouter","get","req","res","hello","mongoose","connect","useNewUrlParser","then","console","log","catch","err","listen","address","settings"],"mappings":";;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AATAA,QAAQ,gBAAR;AACAA,QAAQ,iBAAR;;;AAWA,IAAMC,iBAAiBC,QAAQC,GAAR,CAAYC,WAAZ,IAA2BC,iBAAOC,kBAAzD;AACA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,OAAON,QAAQC,GAAR,CAAYM,IAAZ,IAAoB,IAAjC;;AAEAF,IAAIG,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAL,IAAIG,GAAJ,CAAQ,qBAAR;AACAH,IAAIG,GAAJ,CAAQ,mBAAR,EAA6BG,qBAA7B;AACAN,IAAIG,GAAJ,CAAQ,YAAR,EAAsBI,oBAAtB;AACAP,IAAIG,GAAJ,CAAQ,WAAR,EAAqBK,oBAArB;AACAR,IAAIG,GAAJ,CAAQ,YAAR,EAAsBM,qBAAtB;AACAT,IAAIU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,KAAIP,IAAJ,CAAS,EAACQ,OAAO,OAAR,EAAT;AACH,CAFD;AAGAC,mBAASC,OAAT,CACCrB,cADD,EAEC;AACEsB,kBAAiB,IADnB,EAFD,EAIEC,IAJF,CAIO;AAAA,QAAMC,QAAQC,GAAR,CAAY,oBAAZ,CAAN;AAAA,CAJP,EAKEC,KALF,CAKQ;AAAA,QAAOF,QAAQC,GAAR,CAAYE,GAAZ,EAAgB,6BAAhB,CAAP;AAAA,CALR;;AAOArB,IAAIsB,MAAJ,CAAWrB,IAAX,EAAkB,YAAU;AAC1BiB,SAAQC,GAAR,CAAY,gDAAZ,EAA8D,KAAKI,OAAL,GAAetB,IAA7E,EAAmFD,IAAIwB,QAAJ,CAAa5B,GAAhG;AACD,CAFD","file":"server.js","sourcesContent":["require(\"babel-polyfill\");\nrequire(\"@babel/register\");\nimport express from 'express';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\nimport UserRouter from './Users/UserRoutes';\nimport WorkRouter from './WorkExp/WorkRoutes';\nimport SkillRouter  from './Skills/SkillRoutes';\nimport MediaRouter from './media/MediaRouter';\nimport Config from './config';\n\n\nconst CONNECTION_URI = process.env.MONGODB_URI || Config.SERVER_CREDENTIALS;\nconst app = express();\nconst port = process.env.PORT || 8081;\n\napp.use(express.json());\napp.use(cors());\napp.use('/api/media/images', MediaRouter )\napp.use('/api/users', UserRouter);\napp.use('/api/work', WorkRouter);\napp.use('/api/skill', SkillRouter);\napp.get(\"/\", (req, res) => {\n    res.json({hello: 'world'});\n});\nmongoose.connect(\n\tCONNECTION_URI,\n\t{\n \t useNewUrlParser: true })\n\t.then(() => console.log('connected to MLAB!'))\n\t.catch(err => console.log(err,'error connecting to mongodb'))\n\napp.listen(port , function(){\n  console.log(\"Express server listening on port %d in %s mode\", this.address().port, app.settings.env);\n});\n"]}