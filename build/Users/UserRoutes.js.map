{"version":3,"sources":["../../src/Users/UserRoutes.js"],"names":["express","require","Passport","multer","path","UserController","AuthMiddleware","UserRouter","Router","createUser","login","logout","getUserById","getUsers","updateUser","localStrategy","use","passportOptions","session","authenticate","get","put","post","module","exports"],"mappings":";AACA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACA,MAAME,SAASF,QAAQ,QAAR,CAAf;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,MAAMI,iBAAiBJ,QAAQ,kBAAR,CAAvB;AACA,MAAMK,iBAAiBL,QAAQ,+BAAR,CAAvB;;AAEA,MAAMM,aAAaP,QAAQQ,MAAR,EAAnB;AACA;AACA,MAAM,EAAEC,UAAF,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,WAA7B,EAA0CC,QAA1C,EAAoDC,UAApD,KAAmET,cAAzE;AACA;;AAEA,MAAM,EAAEU,aAAF,KAAoBT,cAA1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAJ,SAASc,GAAT,CAAaD,aAAb;AACA;AACA;AACA,MAAME,kBAAkB,EAAEC,SAAS,KAAX,EAAxB;AACA;AACA,MAAMC,eAAejB,SAASiB,YAAT,CAAsB,OAAtB,EAA+BF,eAA/B,CAArB;;AAEAV,WAAWa,GAAX,CAAe,GAAf,EAAoBP,QAApB;AACAN,WAAWc,GAAX,CAAe,MAAf,EAAuBP,UAAvB;AACAP,WAAWe,IAAX,CAAgB,WAAhB,EAA6Bb,UAA7B;AACAF,WAAWe,IAAX,CAAgB,QAAhB,EAA0BH,YAA1B,EAAwCT,KAAxC;AACAH,WAAWa,GAAX,CAAe,SAAf,EAA0BT,MAA1B;AACAJ,WAAWa,GAAX,CAAe,MAAf,EAAuBR,WAAvB;;AAGAW,OAAOC,OAAP,GAAiBjB,UAAjB","file":"UserRoutes.js","sourcesContent":["\nconst express = require('express');\nconst Passport = require('passport');\nconst multer = require('multer');\nconst path = require('path');\nconst UserController = require('./UserController');\nconst AuthMiddleware = require('../Middleware/Auth-Middleware');\n\nconst UserRouter = express.Router();\n//Methods from user controller\nconst { createUser, login, logout, getUserById, getUsers, updateUser } = UserController;\n//validates a users password and sends token\n\nconst { localStrategy } = AuthMiddleware;\n\n// const storage = multer.diskStorage({\n//     destination: '../media/images',\n//     filename: function (req, file, cb) {\n//         cb(null, file.fieldname + '-' + Date.now() + \n//         path.extname(file.originalname))\n//         console.log('IMG INFO', file)\n//     }\n// })\n\n//passport global middleware\nPassport.use(localStrategy);\n// const upload = multer({ storage: storage })\n//passport local middleware\nconst passportOptions = { session: false };\n//block login by requiring a valid password\nconst authenticate = Passport.authenticate('local', passportOptions);\n\nUserRouter.get('/', getUsers);\nUserRouter.put('/:id', updateUser);\nUserRouter.post('/register', createUser);\nUserRouter.post('/login', authenticate, login);\nUserRouter.get('/logout', logout);\nUserRouter.get('/:id', getUserById)\n\n\nmodule.exports = UserRouter;"]}