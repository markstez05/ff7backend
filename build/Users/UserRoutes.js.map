{"version":3,"sources":["../../src/Users/UserRoutes.js"],"names":["UserRouter","express","Router","createUser","UserController","login","logout","getUserById","getUsers","updateUser","localStrategy","AuthMiddleware","storage","multer","diskStorage","destination","filename","req","file","cb","fieldname","Date","now","path","extname","originalname","console","log","Passport","use","upload","passportOptions","session","authenticate","get","put","single","post"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,EAAnB;AACA;IACQC,U,GAAiEC,wB,CAAjED,U;IAAYE,K,GAAqDD,wB,CAArDC,K;IAAOC,M,GAA8CF,wB,CAA9CE,M;IAAQC,W,GAAsCH,wB,CAAtCG,W;IAAaC,Q,GAAyBJ,wB,CAAzBI,Q;IAAUC,U,GAAeL,wB,CAAfK,U;AAC1D;;IAEQC,a,GAAkBC,wB,CAAlBD,a;;;AAER,IAAME,UAAUC,iBAAOC,WAAP,CAAmB;AAC/BC,iBAAa,iBADkB;AAE/BC,cAAU,kBAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAC/BA,WAAG,IAAH,EAASD,KAAKE,SAAL,GAAiB,GAAjB,GAAuBC,KAAKC,GAAL,EAAvB,GACTC,eAAKC,OAAL,CAAaN,KAAKO,YAAlB,CADA;AAEAC,gBAAQC,GAAR,CAAY,UAAZ,EAAwBT,IAAxB;AACH;AAN8B,CAAnB,CAAhB;;AASA;AACAU,mBAASC,GAAT,CAAanB,aAAb;AACA,IAAMoB,SAAS,sBAAO,EAAElB,SAASA,OAAX,EAAP,CAAf;AACA;AACA,IAAMmB,kBAAkB,EAAEC,SAAS,KAAX,EAAxB;AACA;AACA,IAAMC,eAAeL,mBAASK,YAAT,CAAsB,OAAtB,EAA+BF,eAA/B,CAArB;;AAEA/B,WAAWkC,GAAX,CAAe,GAAf,EAAoB1B,QAApB;AACAR,WAAWmC,GAAX,CAAe,MAAf,EAAuBL,OAAOM,MAAP,CAAc,SAAd,CAAvB,EAAiD3B,UAAjD;AACAT,WAAWqC,IAAX,CAAgB,WAAhB,EAA6BlC,UAA7B;AACAH,WAAWqC,IAAX,CAAgB,QAAhB,EAA0BJ,YAA1B,EAAwC5B,KAAxC;AACAL,WAAWkC,GAAX,CAAe,SAAf,EAA0B5B,MAA1B;AACAN,WAAWkC,GAAX,CAAe,MAAf,EAAuB3B,WAAvB;;kBAGeP,U","file":"UserRoutes.js","sourcesContent":["\nimport express from 'express';\nimport Passport from 'passport';\nimport multer from 'multer';\nimport path from 'path';\nimport UserController from './UserController';\nimport AuthMiddleware from '../Middleware/Auth-Middleware';\n\nconst UserRouter = express.Router();\n//Methods from user controller\nconst { createUser, login, logout, getUserById, getUsers, updateUser } = UserController;\n//validates a users password and sends token\n\nconst { localStrategy } = AuthMiddleware;\n\nconst storage = multer.diskStorage({\n    destination: './media/images/',\n    filename: function (req, file, cb) {\n        cb(null, file.fieldname + '-' + Date.now() + \n        path.extname(file.originalname))\n        console.log('IMG INFO', file)\n    }\n})\n\n//passport global middleware\nPassport.use(localStrategy);\nconst upload = multer({ storage: storage })\n//passport local middleware\nconst passportOptions = { session: false };\n//block login by requiring a valid password\nconst authenticate = Passport.authenticate('local', passportOptions);\n\nUserRouter.get('/', getUsers);\nUserRouter.put('/:id', upload.single('picture'), updateUser);\nUserRouter.post('/register', createUser);\nUserRouter.post('/login', authenticate, login);\nUserRouter.get('/logout', logout);\nUserRouter.get('/:id', getUserById)\n\n\nexport default UserRouter;"]}