{"version":3,"sources":["../../src/Users/UserRoutes.js"],"names":["express","require","Passport","multer","path","UserController","AuthMiddleware","UserRouter","Router","createUser","login","logout","getUserById","getUsers","updateUser","localStrategy","storage","diskStorage","destination","filename","req","file","cb","fieldname","Date","now","extname","originalname","console","log","use","upload","passportOptions","session","authenticate","get","put","single","post","module","exports"],"mappings":";AACA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACA,MAAME,SAASF,QAAQ,QAAR,CAAf;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,MAAMI,iBAAiBJ,QAAQ,kBAAR,CAAvB;AACA,MAAMK,iBAAiBL,QAAQ,+BAAR,CAAvB;;AAEA,MAAMM,aAAaP,QAAQQ,MAAR,EAAnB;AACA;AACA,MAAM,EAAEC,UAAF,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,WAA7B,EAA0CC,QAA1C,EAAoDC,UAApD,KAAmET,cAAzE;AACA;;AAEA,MAAM,EAAEU,aAAF,KAAoBT,cAA1B;;AAEA,MAAMU,UAAUb,OAAOc,WAAP,CAAmB;AAC/BC,iBAAa,iBADkB;AAE/BC,cAAU,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAC/BA,WAAG,IAAH,EAASD,KAAKE,SAAL,GAAiB,GAAjB,GAAuBC,KAAKC,GAAL,EAAvB,GACTrB,KAAKsB,OAAL,CAAaL,KAAKM,YAAlB,CADA;AAEAC,gBAAQC,GAAR,CAAY,UAAZ,EAAwBR,IAAxB;AACH;AAN8B,CAAnB,CAAhB;;AASA;AACAnB,SAAS4B,GAAT,CAAaf,aAAb;AACA,MAAMgB,SAAS5B,OAAO,EAAEa,SAASA,OAAX,EAAP,CAAf;AACA;AACA,MAAMgB,kBAAkB,EAAEC,SAAS,KAAX,EAAxB;AACA;AACA,MAAMC,eAAehC,SAASgC,YAAT,CAAsB,OAAtB,EAA+BF,eAA/B,CAArB;;AAEAzB,WAAW4B,GAAX,CAAe,GAAf,EAAoBtB,QAApB;AACAN,WAAW6B,GAAX,CAAe,MAAf,EAAuBL,OAAOM,MAAP,CAAc,SAAd,CAAvB,EAAiDvB,UAAjD;AACAP,WAAW+B,IAAX,CAAgB,WAAhB,EAA6B7B,UAA7B;AACAF,WAAW+B,IAAX,CAAgB,QAAhB,EAA0BJ,YAA1B,EAAwCxB,KAAxC;AACAH,WAAW4B,GAAX,CAAe,SAAf,EAA0BxB,MAA1B;AACAJ,WAAW4B,GAAX,CAAe,MAAf,EAAuBvB,WAAvB;;AAGA2B,OAAOC,OAAP,GAAiBjC,UAAjB","file":"UserRoutes.js","sourcesContent":["\nconst express = require('express');\nconst Passport = require('passport');\nconst multer = require('multer');\nconst path = require('path');\nconst UserController = require('./UserController');\nconst AuthMiddleware = require('../Middleware/Auth-Middleware');\n\nconst UserRouter = express.Router();\n//Methods from user controller\nconst { createUser, login, logout, getUserById, getUsers, updateUser } = UserController;\n//validates a users password and sends token\n\nconst { localStrategy } = AuthMiddleware;\n\nconst storage = multer.diskStorage({\n    destination: './media/images/',\n    filename: function (req, file, cb) {\n        cb(null, file.fieldname + '-' + Date.now() + \n        path.extname(file.originalname))\n        console.log('IMG INFO', file)\n    }\n})\n\n//passport global middleware\nPassport.use(localStrategy);\nconst upload = multer({ storage: storage })\n//passport local middleware\nconst passportOptions = { session: false };\n//block login by requiring a valid password\nconst authenticate = Passport.authenticate('local', passportOptions);\n\nUserRouter.get('/', getUsers);\nUserRouter.put('/:id', upload.single('picture'), updateUser);\nUserRouter.post('/register', createUser);\nUserRouter.post('/login', authenticate, login);\nUserRouter.get('/logout', logout);\nUserRouter.get('/:id', getUserById)\n\n\nmodule.exports = UserRouter;"]}