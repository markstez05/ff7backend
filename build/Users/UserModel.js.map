{"version":3,"sources":["../../src/Users/UserModel.js"],"names":["mongoose","require","bcrypt","ObjectId","Schema","Types","UserSchema","username","type","String","required","lowercase","unique","password","name","default","userClass","age","Number","location","picture","pre","next","hash","err","methods","validatePassword","compare","User","model","module","exports"],"mappings":"AAAA,MAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,MAAMC,SAASD,QAAQ,UAAR,CAAf;AACA,MAAME,WAAWH,SAASI,MAAT,CAAgBC,KAAhB,CAAsBF,QAAvC;;AAEA,MAAMG,aAAa,IAAIN,SAASI,MAAb,CAAoB;AACnCG,cAAU;AACNC,cAAMC,MADA;AAENC,kBAAU,IAFJ;AAGNC,mBAAW,IAHL;AAINC,gBAAQ;AAJF,KADyB;AAOnCC,cAAU;AACNL,cAAMC,MADA;AAENC,kBAAU;AAFJ,KAPyB;AAWnCI,UAAM;AACFN,cAAMC,MADJ;AAEFC,kBAAU,IAFR;AAGFK,iBAAS;AAHP,KAX6B;AAgBnCC,eAAW;AACPR,cAAMC,MADC;AAEPC,kBAAU,IAFH;AAGPK,iBAAS;AAHF,KAhBwB;AAqBnCE,SAAK;AACDT,cAAMU,MADL;AAEDR,kBAAU,IAFT;AAGAK,iBAAS;AAHT,KArB8B;AA0BnCI,cAAU;AACNX,cAAMC,MADA;AAENC,kBAAU,IAFJ;AAGNK,iBAAS;AAHH,KA1ByB;AA+BnCK,aAAQ;AACJZ,cAAMC,MADF;AAEJC,kBAAU,IAFN;AAGJK,iBAAS;AAHL;AA/B2B,CAApB,CAAnB;;AAsCAT,WAAWe,GAAX,CAAe,MAAf,EAAuB,UAASC,IAAT,EAAe;AAClCpB,WAAOqB,IAAP,CAAY,KAAKV,QAAjB,EAA2B,EAA3B,EAA+B,CAACW,GAAD,EAAMD,IAAN,KAAe;AACvC,aAAKV,QAAL,GAAgBU,IAAhB;AACA,eAAOD,MAAP;AACJ,KAHH;AAID,CALH;;AAOEhB,WAAWmB,OAAX,CAAmBC,gBAAnB,GAAsC,gBAAeb,QAAf,EAAwB;AAC1D,WAAOX,OAAOyB,OAAP,CAAed,QAAf,EAAyB,KAAKA,QAA9B,CAAP;AACH,CAFD;;AAIF,MAAMe,OAAO5B,SAAS6B,KAAT,CAAe,MAAf,EAAuBvB,UAAvB,CAAb;;AAEAwB,OAAOC,OAAP,GAAiBH,IAAjB","file":"UserModel.js","sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\nconst UserSchema = new mongoose.Schema({\n    username: {\n        type: String,\n        required: true,\n        lowercase: true,\n        unique: true,\n    },\n    password: {\n        type: String,\n        required: true,\n    },\n    name: {\n        type: String,\n        required: true,\n        default: 'New Player'\n    },\n    userClass: {\n        type: String,\n        required: true,\n        default: 'Worker'\n    },\n    age: {\n        type: Number,\n        required: true,\n         default: 20\n    },\n    location: {\n        type: String,\n        required: true,\n        default: 'Somewhere, USA'\n    },\n    picture:{\n        type: String,\n        required: true,\n        default: \"media/images/default.jpg\"\n    }\n});\n\nUserSchema.pre('save', function(next) {\n    bcrypt.hash(this.password, 10, (err, hash) => {\n           this.password = hash;\n           return next();\n      });\n  });\n  \n  UserSchema.methods.validatePassword = async function(password){\n      return bcrypt.compare(password, this.password);\n  }\n\nconst User = mongoose.model('User', UserSchema);\n\nmodule.exports = User;"]}