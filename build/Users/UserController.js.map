{"version":3,"sources":["../../src/Users/UserController.js"],"names":["User","require","GenerateToken","UserController","createUser","req","res","userInfo","body","newUser","save","then","doc","token","status","json","user","_id","username","name","userClass","age","location","picture","catch","err","login","find","logout","send","updateUser","id","params","findOneAndUpdate","$set","file","path","getUserById","findById","getUsers","docs","module","exports"],"mappings":"AAAA,MAAMA,OAAOC,QAAQ,aAAR,CAAb;AACA,MAAMC,gBAAgBD,QAAQ,qBAAR,CAAtB;;AAEA,MAAME,iBAAiB;AACnBC,gBAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,cAAMC,WAAWF,IAAIG,IAArB;AACA,YAAG,cAAcD,QAAd,IAA0B,cAAcA,QAA3C,EAAqD;AACjD,kBAAME,UAAU,IAAIT,IAAJ,CAASO,QAAT,CAAhB;AACAE,oBAAQC,IAAR,GACCC,IADD,CACMC,OAAO;AACT,sBAAMC,QAAQX,cAAcU,GAAd,CAAd;AACAN,oBAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,0BAAM,EAAEC,KAAKL,IAAIK,GAAX,EAAgBC,UAAUN,IAAIM,QAA9B,EAAwCC,MAAMP,IAAIO,IAAlD,EAAwDC,WAAWR,IAAIQ,SAAvE,EAAkFC,KAAKT,IAAIS,GAA3F,EAAgGC,UAAUV,IAAIU,QAA9G,EAAwHC,SAASX,IAAIW,OAArI,EADW;AAEjBV;AAFiB,iBAArB;AAIH,aAPD,EAQCW,KARD,CAQOC,OAAOnB,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,KAAK,aAAN,EAArB,CARd;AASH,SAXD,MAWO;AACHnB,gBAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,KAAI,wCAAL,EAArB;AACH;AACJ,KAjBkB;AAkBnBC,WAAO,CAACrB,GAAD,EAAMC,GAAN,KAAc;AACjB;AACA,cAAMU,OAAOX,IAAIG,IAAjB;AACAR,aAAK2B,IAAL,CAAU,EAAC,YAAYtB,IAAIG,IAAJ,CAASU,QAAtB,EAAV,EAA2C,CAACO,GAAD,EAAMT,IAAN,KAAe;AACtD,gBAAIS,GAAJ,EAAS;AACLnB,oBAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,KAAI,6CAAL,EAArB;AACH,aAFD,MAEO;AACHnB,oBAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEF,OAAQX,cAAcG,IAAIW,IAAlB,CAAV,EAAmCA,MAAMA,KAAK,CAAL,CAAzC,EAArB;AACH;AACJ,SAND;AAOH,KA5BkB;;AA8BnBY,YAAQ,CAACvB,GAAD,EAAMC,GAAN,KAAc;AAClBA,YAAIuB,IAAJ,CAAS,yBAAT;AACH,KAhCkB;AAiCnBC,gBAAY,CAACzB,GAAD,EAAMC,GAAN,KAAc;AACtB,cAAM,EAAEyB,EAAF,KAAS1B,IAAI2B,MAAnB;AACA,YAAG,UAAU3B,IAAIG,IAAd,IAAsB,eAAeH,IAAIG,IAAzC,IAAiD,SAASH,IAAIG,IAA9D,IAAsE,cAAcH,IAAIG,IAA3F,EAAiG;AAC7F,kBAAM,EAAEW,IAAF,EAAQC,SAAR,EAAmBE,QAAnB,EAA6BD,GAA7B,KAAoChB,IAAIG,IAA9C;AACAR,iBAAKiC,gBAAL,CAAsB,EAAChB,KAAKc,EAAN,EAAtB,EAAiC,EAACG,MAAK,EAACf,IAAD,EAAOG,QAAP,EAAiBF,SAAjB,EAA4BC,GAA5B,EAAN,EAAjC,EACCV,IADD,CACMC,OAAON,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CADb,EAECY,KAFD,CAEOC,OAAOnB,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,KAAK,sBAAP,EAArB,CAFd;AAGH,SALD,MAKO;AACH,kBAAMF,UAAUlB,IAAI8B,IAAJ,CAASC,IAAzB;AACApC,iBAAKiC,gBAAL,CAAsB,EAAChB,KAAKc,EAAN,EAAtB,EAAiC,EAACG,MAAK,EAACX,SAASA,OAAV,EAAN,EAAjC,EACCZ,IADD,CACMC,OAAON,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CADb,EAECY,KAFD,CAEOC,OAAOnB,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,KAAK,sBAAP,EAArB,CAFd;AAGH;AACJ,KA9CkB;AA+CnBY,iBAAa,CAAChC,GAAD,EAAMC,GAAN,KAAc;AACvB,cAAM,EAAEyB,EAAF,KAAS1B,IAAI2B,MAAnB;AACAhC,aAAKsC,QAAL,CAAcP,EAAd,EACCpB,IADD,CACMC,OAAON,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CADb,EAECY,KAFD,CAEOC,OAAOnB,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,KAAK,SAAP,EAArB,CAFd;AAGH,KApDkB;AAqDnBc,cAAS,CAAClC,GAAD,EAAMC,GAAN,KAAc;AACnBN,aAAK2B,IAAL,GACChB,IADD,CACM6B,QAAQlC,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqByB,IAArB,CADd,EAEChB,KAFD,CAEOC,OAAOnB,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACU,KAAK,2BAAN,EAArB,CAFd;AAGH;AAzDkB,CAAvB;;AA4DAgB,OAAOC,OAAP,GAAiBvC,cAAjB","file":"UserController.js","sourcesContent":["const User = require('./UserModel');\nconst GenerateToken = require('../Middleware/Token');\n\nconst UserController = {\n    createUser: (req, res) => {\n        const userInfo = req.body;\n        if('username' in userInfo && 'password' in userInfo) {\n            const newUser = new User(userInfo);\n            newUser.save()\n            .then(doc => {\n                const token = GenerateToken(doc);\n                res.status(201).json({\n                    user: { _id: doc._id, username: doc.username, name: doc.name, userClass: doc.userClass, age: doc.age, location: doc.location, picture: doc.picture },\n                    token\n                });\n            })\n            .catch(err => res.status(500).json({err: 'Cant Log In'}));\n        } else {\n            res.status(500).json({err:'please provide a username and password'});\n        }\n    },\n    login: (req, res) => {\n        //if this far use logged in correctly and passes local strat\n        const user = req.body;\n        User.find({\"username\": req.body.username}, (err, user) => {\n            if (err) {\n                res.status(500).json({err:'please proved a valid username and password'});\n            } else {\n                res.status(200).json({ token:  GenerateToken(req.user), user: user[0] });\n            }\n        });\n    },\n\n    logout: (req, res) => {\n        res.send('Logged out Successfully');\n    },\n    updateUser: (req, res) => {\n        const { id } = req.params;  \n        if('name' in req.body || 'userClass' in req.body || 'age' in req.body || 'location' in req.body) {\n            const { name, userClass, location, age} = req.body;\n            User.findOneAndUpdate({_id: id}, {$set:{name, location, userClass, age}})\n            .then(doc => res.status(200).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            const picture = req.file.path\n            User.findOneAndUpdate({_id: id}, {$set:{picture: picture}})\n            .then(doc => res.status(200).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        }\n    },\n    getUserById: (req, res) => {\n        const { id } = req.params;\n        User.findById(id)   \n        .then(doc => res.status(201).json(doc))\n        .catch(err => res.status(500).json({ err: \"cant yo\"}));\n    },\n    getUsers:(req, res) => {\n        User.find()\n        .then(docs => res.status(200).json(docs))\n        .catch(err => res.status(500).json({err: 'could not get users...lel'}))\n    },\n};\n\nmodule.exports = UserController;"]}