{"version":3,"sources":["../../src/Users/UserController.js"],"names":["UserController","createUser","req","res","userInfo","body","newUser","User","save","then","token","doc","console","log","user","status","json","_id","username","name","userClass","age","location","picture","catch","err","login","find","logout","send","updateUser","id","params","findOneAndUpdate","$set","file","path","getUserById","findById","getUsers","docs"],"mappings":"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","file":"UserController.js","sourcesContent":["import User from './UserModel';\nimport GenerateToken from '../Middleware/Token';\n\nconst UserController = {\n    createUser: (req, res) => {\n        const userInfo = req.body;\n        if('username' in userInfo && 'password' in userInfo) {\n            const newUser = new User(userInfo);\n            newUser.save()\n            .then(doc => {\n                const token = GenerateToken(doc);\n                console.log('user', user)\n                res.status(201).json({\n                    user: { _id: doc._id, username: doc.username, name: doc.name, userClass: doc.userClass, age: doc.age, location: doc.location, picture: doc.picture },\n                    token\n                });\n                console.log('user', user)\n            })\n            .catch(err => res.status(500).json({err: 'Cant Log In'}));\n        } else {\n            res.status(500).json({err:'please provide a username and password'});\n        }\n    },\n    login: (req, res) => {\n        //if this far use logged in correctly and passes local strat\n        const user = req.body;\n        User.find({\"username\": req.body.username}, (err, user) => {\n            if (err) {\n                res.status(500).json({err:'please proved a valid username and password'});\n            } else {\n                res.status(200).json({ token:  GenerateToken(req.user), user: user[0] });\n            }\n        });\n    },\n\n    logout: (req, res) => {\n        res.send('Logged out Successfully');\n    },\n    updateUser: (req, res) => {\n        const { id } = req.params;  \n        console.log('here', id)\n        if('name' in req.body || 'userClass' in req.body || 'age' in req.body || 'location' in req.body) {\n            const { name, userClass, location, age} = req.body;\n            console.log(req.body)\n            User.findOneAndUpdate({_id: id}, {$set:{name, location, userClass, age}})\n            .then(doc => res.status(200).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            const picture = req.file.path\n            User.findOneAndUpdate({_id: id}, {$set:{picture: picture}})\n            .then(doc => res.status(200).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        }\n    },\n    getUserById: (req, res) => {\n        const { id } = req.params;\n        User.findById(id)   \n        .then(doc => res.status(201).json(doc))\n        .catch(err => res.status(500).json({ err: \"cant yo\"}));\n    },\n    getUsers:(req, res) => {\n        User.find()\n        .then(docs => res.status(200).json(docs))\n        .catch(err => res.status(500).json({err: 'could not get users...lel'}))\n    },\n};\n\nexport default UserController;"]}