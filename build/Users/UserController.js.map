{"version":3,"sources":["../../src/Users/UserController.js"],"names":["User","require","GenerateToken","UserController","createUser","req","res","userInfo","body","newUser","save","then","doc","token","console","log","user","status","json","_id","username","name","userClass","age","location","picture","catch","err","login","find","logout","send","updateUser","id","params","findOneAndUpdate","$set","file","path","getUserById","findById","getUsers","docs","module","exports"],"mappings":"AAAA,MAAMA,OAAOC,QAAQ,aAAR,CAAb;AACA,MAAMC,gBAAgBD,QAAQ,qBAAR,CAAtB;;AAEA,MAAME,iBAAiB;AACnBC,gBAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,cAAMC,WAAWF,IAAIG,IAArB;AACA,YAAG,cAAcD,QAAd,IAA0B,cAAcA,QAA3C,EAAqD;AACjD,kBAAME,UAAU,IAAIT,IAAJ,CAASO,QAAT,CAAhB;AACAE,oBAAQC,IAAR,GACCC,IADD,CACMC,OAAO;AACT,sBAAMC,QAAQX,cAAcU,GAAd,CAAd;AACAE,wBAAQC,GAAR,CAAY,MAAZ,EAAoBC,IAApB;AACAV,oBAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBF,0BAAM,EAAEG,KAAKP,IAAIO,GAAX,EAAgBC,UAAUR,IAAIQ,QAA9B,EAAwCC,MAAMT,IAAIS,IAAlD,EAAwDC,WAAWV,IAAIU,SAAvE,EAAkFC,KAAKX,IAAIW,GAA3F,EAAgGC,UAAUZ,IAAIY,QAA9G,EAAwHC,SAASb,IAAIa,OAArI,EADW;AAEjBZ;AAFiB,iBAArB;AAIAC,wBAAQC,GAAR,CAAY,MAAZ,EAAoBC,IAApB;AACH,aATD,EAUCU,KAVD,CAUOC,OAAOrB,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACS,KAAK,aAAN,EAArB,CAVd;AAWH,SAbD,MAaO;AACHrB,gBAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACS,KAAI,wCAAL,EAArB;AACH;AACJ,KAnBkB;AAoBnBC,WAAO,CAACvB,GAAD,EAAMC,GAAN,KAAc;AACjB;AACA,cAAMU,OAAOX,IAAIG,IAAjB;AACAR,aAAK6B,IAAL,CAAU,EAAC,YAAYxB,IAAIG,IAAJ,CAASY,QAAtB,EAAV,EAA2C,CAACO,GAAD,EAAMX,IAAN,KAAe;AACtD,gBAAIW,GAAJ,EAAS;AACLrB,oBAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACS,KAAI,6CAAL,EAArB;AACH,aAFD,MAEO;AACHrB,oBAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEL,OAAQX,cAAcG,IAAIW,IAAlB,CAAV,EAAmCA,MAAMA,KAAK,CAAL,CAAzC,EAArB;AACH;AACJ,SAND;AAOH,KA9BkB;;AAgCnBc,YAAQ,CAACzB,GAAD,EAAMC,GAAN,KAAc;AAClBA,YAAIyB,IAAJ,CAAS,yBAAT;AACH,KAlCkB;AAmCnBC,gBAAY,CAAC3B,GAAD,EAAMC,GAAN,KAAc;AACtB,cAAM,EAAE2B,EAAF,KAAS5B,IAAI6B,MAAnB;AACApB,gBAAQC,GAAR,CAAY,MAAZ,EAAoBkB,EAApB;AACA,YAAG,UAAU5B,IAAIG,IAAd,IAAsB,eAAeH,IAAIG,IAAzC,IAAiD,SAASH,IAAIG,IAA9D,IAAsE,cAAcH,IAAIG,IAA3F,EAAiG;AAC7F,kBAAM,EAAEa,IAAF,EAAQC,SAAR,EAAmBE,QAAnB,EAA6BD,GAA7B,KAAoClB,IAAIG,IAA9C;AACAM,oBAAQC,GAAR,CAAYV,IAAIG,IAAhB;AACAR,iBAAKmC,gBAAL,CAAsB,EAAChB,KAAKc,EAAN,EAAtB,EAAiC,EAACG,MAAK,EAACf,IAAD,EAAOG,QAAP,EAAiBF,SAAjB,EAA4BC,GAA5B,EAAN,EAAjC,EACCZ,IADD,CACMC,OAAON,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,GAArB,CADb,EAECc,KAFD,CAEOC,OAAOrB,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,KAAK,sBAAP,EAArB,CAFd;AAGH,SAND,MAMO;AACH,kBAAMF,UAAUpB,IAAIgC,IAAJ,CAASC,IAAzB;AACAtC,iBAAKmC,gBAAL,CAAsB,EAAChB,KAAKc,EAAN,EAAtB,EAAiC,EAACG,MAAK,EAACX,SAASA,OAAV,EAAN,EAAjC,EACCd,IADD,CACMC,OAAON,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,GAArB,CADb,EAECc,KAFD,CAEOC,OAAOrB,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,KAAK,sBAAP,EAArB,CAFd;AAGH;AACJ,KAlDkB;AAmDnBY,iBAAa,CAAClC,GAAD,EAAMC,GAAN,KAAc;AACvB,cAAM,EAAE2B,EAAF,KAAS5B,IAAI6B,MAAnB;AACAlC,aAAKwC,QAAL,CAAcP,EAAd,EACCtB,IADD,CACMC,OAAON,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,GAArB,CADb,EAECc,KAFD,CAEOC,OAAOrB,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,KAAK,SAAP,EAArB,CAFd;AAGH,KAxDkB;AAyDnBc,cAAS,CAACpC,GAAD,EAAMC,GAAN,KAAc;AACnBN,aAAK6B,IAAL,GACClB,IADD,CACM+B,QAAQpC,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBwB,IAArB,CADd,EAEChB,KAFD,CAEOC,OAAOrB,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACS,KAAK,2BAAN,EAArB,CAFd;AAGH;AA7DkB,CAAvB;;AAgEAgB,OAAOC,OAAP,GAAiBzC,cAAjB","file":"UserController.js","sourcesContent":["const User = require('./UserModel');\nconst GenerateToken = require('../Middleware/Token');\n\nconst UserController = {\n    createUser: (req, res) => {\n        const userInfo = req.body;\n        if('username' in userInfo && 'password' in userInfo) {\n            const newUser = new User(userInfo);\n            newUser.save()\n            .then(doc => {\n                const token = GenerateToken(doc);\n                console.log('user', user)\n                res.status(201).json({\n                    user: { _id: doc._id, username: doc.username, name: doc.name, userClass: doc.userClass, age: doc.age, location: doc.location, picture: doc.picture },\n                    token\n                });\n                console.log('user', user)\n            })\n            .catch(err => res.status(500).json({err: 'Cant Log In'}));\n        } else {\n            res.status(500).json({err:'please provide a username and password'});\n        }\n    },\n    login: (req, res) => {\n        //if this far use logged in correctly and passes local strat\n        const user = req.body;\n        User.find({\"username\": req.body.username}, (err, user) => {\n            if (err) {\n                res.status(500).json({err:'please proved a valid username and password'});\n            } else {\n                res.status(200).json({ token:  GenerateToken(req.user), user: user[0] });\n            }\n        });\n    },\n\n    logout: (req, res) => {\n        res.send('Logged out Successfully');\n    },\n    updateUser: (req, res) => {\n        const { id } = req.params;  \n        console.log('here', id)\n        if('name' in req.body || 'userClass' in req.body || 'age' in req.body || 'location' in req.body) {\n            const { name, userClass, location, age} = req.body;\n            console.log(req.body)\n            User.findOneAndUpdate({_id: id}, {$set:{name, location, userClass, age}})\n            .then(doc => res.status(200).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        } else {\n            const picture = req.file.path\n            User.findOneAndUpdate({_id: id}, {$set:{picture: picture}})\n            .then(doc => res.status(200).json(doc))\n            .catch(err => res.status(500).json({ err: 'something went wrong'}));\n        }\n    },\n    getUserById: (req, res) => {\n        const { id } = req.params;\n        User.findById(id)   \n        .then(doc => res.status(201).json(doc))\n        .catch(err => res.status(500).json({ err: \"cant yo\"}));\n    },\n    getUsers:(req, res) => {\n        User.find()\n        .then(docs => res.status(200).json(docs))\n        .catch(err => res.status(500).json({err: 'could not get users...lel'}))\n    },\n};\n\nmodule.exports = UserController;"]}